# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import collector_pb2 as collector__pb2


class CollectorStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetCandlestick = channel.unary_unary(
        '/taurus.Collector/GetCandlestick',
        request_serializer=collector__pb2.CandlestickRequest.SerializeToString,
        response_deserializer=collector__pb2.Candlestick.FromString,
        )
    self.GetCandlesticks = channel.unary_unary(
        '/taurus.Collector/GetCandlesticks',
        request_serializer=collector__pb2.CandlestickRequest.SerializeToString,
        response_deserializer=collector__pb2.CandlestickSet.FromString,
        )
    self.GetTrade = channel.unary_unary(
        '/taurus.Collector/GetTrade',
        request_serializer=collector__pb2.TradeRequest.SerializeToString,
        response_deserializer=collector__pb2.Trade.FromString,
        )
    self.GetTrades = channel.unary_unary(
        '/taurus.Collector/GetTrades',
        request_serializer=collector__pb2.TradeRequest.SerializeToString,
        response_deserializer=collector__pb2.TradeSet.FromString,
        )


class CollectorServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetCandlestick(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetCandlesticks(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetTrade(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetTrades(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CollectorServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetCandlestick': grpc.unary_unary_rpc_method_handler(
          servicer.GetCandlestick,
          request_deserializer=collector__pb2.CandlestickRequest.FromString,
          response_serializer=collector__pb2.Candlestick.SerializeToString,
      ),
      'GetCandlesticks': grpc.unary_unary_rpc_method_handler(
          servicer.GetCandlesticks,
          request_deserializer=collector__pb2.CandlestickRequest.FromString,
          response_serializer=collector__pb2.CandlestickSet.SerializeToString,
      ),
      'GetTrade': grpc.unary_unary_rpc_method_handler(
          servicer.GetTrade,
          request_deserializer=collector__pb2.TradeRequest.FromString,
          response_serializer=collector__pb2.Trade.SerializeToString,
      ),
      'GetTrades': grpc.unary_unary_rpc_method_handler(
          servicer.GetTrades,
          request_deserializer=collector__pb2.TradeRequest.FromString,
          response_serializer=collector__pb2.TradeSet.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'taurus.Collector', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
